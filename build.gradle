buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '[6.0,6.2)', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'gradle.plugin.com.github.johnrengelman:shadow:7.1.2'
    }
}


plugins {
    id 'eclipse'
    id 'idea'
    id 'java'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}


group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

configurations {
    libraries
    // This way, you only need one dependency declaration for both runtime and compile dependencies
    implementation.extendsFrom libraries
}
configurations {
    runtimeClasspath.extendsFrom localRuntime
}

minecraft {

    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'geckolib.disable_examples', 'true'


        }
        client {}
        server {
            jvmArgs "-XX:+AllowEnhancedClassRedefinition"
        }

        data {
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }

    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
}
jarJar.enable()

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

    mavenLocal()
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }

    maven {
        name = "TerraformersMC"
        url = "https://maven.terraformersmc.com/"
    }

    maven {
        url = "https://www.cursemaven.com"
    }

// This is the repositories block in your build.gradle. NOT the one in publishing, or in buildscript. If it does not exist already, create it.
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        content {
            includeGroupByRegex("software\\.bernie.*")
            includeGroup("com.eliotlash.mclib")
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // JEI
    compileOnly fg.deobf("mezz.jei:jei-1.20.1-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-1.20.1-forge-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-1.20.1-forge:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-1.20.1-forge:${jei_version}")


    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.3.6"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:0.3.6")) {
        jarJar.ranged(it, "[0.3.6,)")
    }

    // 车万女仆
//    compileOnly fg.deobf("curse.maven:touhou-little-maid-355044:6302618")
//    runtimeOnly fg.deobf("curse.maven:touhou-little-maid-355044:6302618")

    // jade
    compileOnly fg.deobf("curse.maven:jade-324717:6271651")
    runtimeOnly fg.deobf("curse.maven:jade-324717:6271651")

    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-${minecraft_version}:${geckolib_version}")


//    implementation "mezz.jei:jei-${minecraft_version}-common-api:${jei_version}"
//    implementation "mezz.jei:jei-${minecraft_version}-neoforge-api:${jei_version}"
//    implementation "mezz.jei:jei-${minecraft_version}-neoforge:${jei_version}"

//    implementation(files("libs/ConfluenceOtherworld-1.1.4-alpha.jar"))
//    implementation(files("libs/terra_entity-1.1.14.jar"))
//    implementation(files("libs/confluence_magic_lib-0.0.1.jar"))
//    implementation(files("libs/terra_guns-1.21.1-1.0.jar"))
//    implementation(files("libs/terra_curio-1.1.0.jar"))

//    compileOnly(files("libs/ConfluenceOtherworld-1.1.4-alpha.jar"))
//    compileOnly(files("libs/terra_entity-1.1.14.jar"))
//    compileOnly(files("libs/confluence_magic_lib-0.0.1.jar"))
//    compileOnly(files("libs/terra_guns-1.21.1-1.0.jar"))
//    compileOnly(files("libs/terra_curio-1.1.0.jar"))

//    implementation "curse.maven:confluence-1209464:6343042"
////    compileOnly "curse.maven:confluence-1209464:6343042"
//    compileOnly "curse.maven:terra-entity-1173196:6249871"
////    runtimeOnly "curse.maven:terra-entity-1173196:6249871"

//    compileOnly "curse.maven:terra-curio-1027625:6254391"
//    runtimeOnly "curse.maven:terra-curio-1027625:6254391"

//    implementation "top.theillusivec4.curios:curios-neoforge:${curios_version}"

//    implementation "software.bernie.geckolib:geckolib-neoforge-${minecraft_version}:${geckolib_version}"

    // carry on
//    compileOnly"curse.maven:carry-on-274259:5649344"
//    runtimeOnly "curse.maven:carry-on-274259:5649344"

}



tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
                             forge_version       : forge_version, forge_version_range: forge_version_range,
                             loader_version_range: loader_version_range,
                             mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
                             mod_authors         : mod_authors, mod_description: mod_description,]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes(["Specification-Title"     : mod_id,
                    "Specification-Vendor"    : mod_authors,
                    "Specification-Version"   : "1", // We are version 1 of ourselves
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : project.jar.archiveVersion,
                    "Implementation-Vendor"   : mod_authors,
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")])
    }

    finalizedBy 'reobfJar'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

tasks.withType(Copy).all { duplicatesStrategy 'exclude' }

